---
- name: add ip modules necessary for kubernetes
  copy:
    src: files/modules-load-kubernetes.conf
    dest: /etc/modules-load.d/kubernetes.conf
  become: yes
  notify:
    - reload kernel modules
- meta: flush_handlers
- name: add kubernetes repositories
  yum_repository:
    baseurl: "{{ item.baseurl }}"
    description: "{{ item.description }}"
    name: "{{ item.name }}"
    state: present
    gpgkey: "{{ item.gpgkey }}"
  loop:
    - baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64/
      description: Kubernetes repo
      name: kubernetes
      gpgkey:
        - https://packages.cloud.google.com/yum/doc/yum-key.gpg
        - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  become: yes
- name: configure kernel ipv4 parameters
  sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward
  become: yes
- name: set permissive mode for selinux
  selinux:
    policy: targeted
    state: permissive
  become: yes
- name: disable swap
  command: swapoff -a
  become: yes
- name: disable ipv6 resolution for yum
  ini_file:
    path: /etc/yum.conf
    section: main
    option: ip_resolve
    value: '4'
  become: yes
- name: install kubernetes
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
      - containerd.io
    state: present
  become: yes
  environment:
    https_proxy: https://192.168.70.1:8080
# https://stackoverflow.com/questions/22472168/whats-the-easy-way-to-auto-create-non-existing-dir-in-ansible
- name: kubelet services
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - kubelet
  become: yes
- name: download calicoctl
  get_url:
    url: https://github.com/projectcalico/calicoctl/releases/download/v3.11.2/calicoctl
    dest: "{{ ansible_env.HOME }}/calicoctl"
    mode: 0700
  environment:
    https_proxy: https://192.168.70.1:8080
- name: configure calicoctl
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    regexp: "^export {{ calico_datastore }}$"
    line: "export {{ calico_datastore }}"
  tags:
    - test
